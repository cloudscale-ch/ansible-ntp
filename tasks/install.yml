---

- name: Ensure that alternative daemons/programs are not installed
  apt:
    name: '{{ item }}'
    state: 'absent'
    purge: True
  with_flattened:
    - [ '{{ "chrony" if (ntp__daemon != "chrony") else [] }}' ]
    - [ '{{ "ntpdate" if (ntp__daemon != "ntpdate" and not ntp__ignore_ntpdate|bool) else [] }}' ]
    - [ '{{ "ntp" if (ntp__daemon not in [ "ntpd", "openntpd"]) else [] }}' ]
    - [ '{{ "openntpd" if (ntp__daemon != "openntpd") else [] }}' ]

- name: Install required packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - [ '{{ "chrony" if (ntp__daemon == "chrony") else [] }}' ]
    - [ '{{ "ntpdate" if (ntp__daemon == "ntpdate") else [] }}' ]
    - [ '{{ "ntp" if (ntp__daemon == "ntpd") else [] }}' ]
    - [ '{{ "openntpd" if (ntp__daemon == "openntpd") else [] }}' ]

- name: Manage systemd-timesyncd state
  service:
    name: 'systemd-timesyncd'
    state: '{{ "started" if (ntp__daemon in [ "systemd-timesyncd" ]) else "stopped" }}'
    enabled: '{{ True if (ntp__daemon in [ "systemd-timesyncd" ]) else False }}'
  when: (ansible_local|d() and ansible_local.init|d() and
         ansible_local.init == "systemd")

# NTPdate does not need to be configured separately as the script `/usr/sbin/ntpdate-debian`
# will pick up the configuration from `/etc/ntp.conf` when it exists.

# Install chrony on all hosts except inside containers
- include: chrony.yml
  when: ntp__daemon == 'chrony'

  # Install NTPd on all hosts except inside containers
- include: ntpd.yml
  when: ntp__daemon in [ 'ntpd', 'ntpdate' ]

  # Install OpenNTPd on all hosts except inside containers
- include: openntpd.yml
  when: ntp__daemon == 'openntpd'

  # Configure systemd-timesyncd
- name: Include systemd-timesyncd configuration
  include: systemd-timesyncd.yml
  when: ((ansible_local|d() and ansible_local.init|d() and
          ansible_local.init == "systemd") and
         ntp__daemon == 'systemd-timesyncd')
